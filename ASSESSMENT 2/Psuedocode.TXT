Planning for the student management system

Step 1. Create classes and main method
	Classes : 
1.Student Class - Stores student information as an object and initialises all properties also calculates sum of marks for each student
2.StudentMarksManager Class - read the csv file, parse string as double(marks maybe set as string in csv) also get the unit from the file. And house all calculation methods
3. Main class - main menu that provides interface for user interaction. 


Plan for Student Class:
Class Student 
Properties : lastName, firstName, studentID, a1, a2, a3, totalMark
Constructors for all variables
Return total mark

Plan for MarksManager Class
Properties : List all student objects, make unit object
Initialise all students to empty list, initialise unit as a new unit
Readfile and parse data and also populate the student list with names
Give error if some error is faced.

Main class:
Provide interface for user to get the result they require.


-----------------------

Bubble Sort Algorithm:
Take Input: studentList
//determine the number of student in list and set as n
Initialize n as size of studentList

Outer loop:  For i from 0 to n-2:  //runs from first to second last element to make sure all elements are compared
   Inner Loop For j from 0 to n-i-2: //this loop actually compares and swaps elements so that each iteration the element number to be sorted decreases
        If studentList[j].getTotalMark() > studentList[j+1].getTotalMark(): //compare current student mark with next 
            Swap studentList[j] and studentList[j+1] //if current mark > next mark, it is swapped 

in end of each iteration, 1 number is put on the right most and by end of all loop, whole list is sorted.

-------------------------

Algorithm 3:print the list of students with total marks less than a certain threshold, take threshold from input

Take Input: threshold
Initialize studentsBelowThreshold as empty list
For each student in students:
    If student.getTotalMark() < threshold: //compares each student total mark with threshold mark 
	//if student got greater than threshold, ignore

	//else
        Add student to studentsBelowThreshold
	//once whole loop ends	
For each student in studentsBelowThreshold:
    Print student.firstName, student.lastName, student.studentID, student.getTotalMark()

-------------------------------

Algorithm 4: print the top 5 students with the highest total marks and the top 5 students with the lowest total marks

Take Input: studentList

Call bubbleSort(studentList) to sort the students by total marks in ascending order

// Get top 5 students
For i from 0 to 5:
    Select 5 students from end of the list 
	print name, mark1, mark2, mark3 and total mark of each student

// Get bottom 5 students
For i from 0 to 5:
    Select 5 students from top of the list 
	print name, mark1, mark2, mark3 and total mark of each student







